init {
    $api = $lib.import(ex.validin.api, debug=$lib.debug)
    $privsep = $lib.import(ex.validin.privsep, debug=$lib.debug)
}

$api_key_set = $privsep.getValidinAPIKey()

if ($api_key_set != $lib.false) {

    // Initialize payload structure
    $payload = ({
        "types": ({
            "dom": ([]),
            "ip": ([]),
            "hash": ([]),
            "raw": ([])
        })
    })
    
    $indicator_value = $node.repr()
    
    switch $node.form() {
        "inet:fqdn": {
            $payload.types.dom.append($indicator_value)
        }
        ("inet:ipv4", "inet:ipv6"): {
            $payload.types.ip.append($indicator_value)
        }
        ("hash:md5", "hash:sha1", "hash:sha256"): {
            $payload.types.hash.append($indicator_value)
        }
        *: { 
            $lib.warn("Unsupported form for indicator deletion: {f}", f=$node.form()) 
            return()
        }
    }
    
    if ($lib.debug) {
        $lib.print(`Deleting {$node.form()}={$indicator_value} from project {$cmdopts.project_guid}`)
    }
    
    $result = $api.deleteProjectIndicators($cmdopts.project_guid, $payload)
    if ($result) {
        // Also remove the light edge in Synapse to keep proj:project in sync
        [ <(refs)- { proj:project } ]
        $lib.print(`Successfully deleted {$node.form()}={$indicator_value} from project and removed Synapse edge`)
    } else {
        $lib.warn(`Failed to delete indicator from project`)
    }

} else {
    $lib.exit("Validin API key not set and is needed to use this function, please run 'ex.validin.setup.apikey' first")
} 