$privsep = $lib.import(ex.validin.privsep, debug=$lib.debug)


function getIpPDNS(entity) {
    $api_url = $lib.str.concat("/axon/ip/dns/history/", $entity)

    if ($lib.debug) {
        $lib.print("Calling API URL: {url}", url=$api_url)
    }

    return($privsep.makeValidinAPIRequest($api_url))
}

function getDomainPDNS(entity) {
    $api_url = $lib.str.concat("/axon/domain/dns/history/", $entity)

    if ($lib.debug) {
        $lib.print("Calling API URL: {url}", url=$api_url)
    }
    return($privsep.makeValidinAPIRequest($api_url))
}

function getExtraDomainPDNS(entity) {
    $api_url = $lib.str.concat("/axon/domain/dns/extra/", $entity)

    if ($lib.debug) {
        $lib.print("Calling API URL: {url}", url=$api_url)
    }
    return($privsep.makeValidinAPIRequest($api_url))
}

function getDomainSubdomains(entity) {
    $api_url = $lib.str.concat("/axon/domain/subdomains/", $entity)

    if ($lib.debug) {
        $lib.print("Calling API URL: {url}", url=$api_url)
    }
    return($privsep.makeValidinAPIRequest($api_url))
}

function getDomainCrawlHistory(entity) {
    $api_url = $lib.str.concat("/axon/ip/crawl/history/", $entity)

    if ($lib.debug) {
        $lib.print("Calling API URL: {url}", url=$api_url)
    }
    return($privsep.makeValidinAPIRequest($api_url))
}

function getIpCrawlHistory(entity) {
    $api_url = $lib.str.concat("/axon/ip/crawl/history/", $entity)

    if ($lib.debug) {
        $lib.print("Calling API URL: {url}", url=$api_url)
    }
    return($privsep.makeValidinAPIRequest($api_url))
}

function getAdvancedSearchResults(query) {
    $api_url = $lib.str.concat("/axon/ip/dns/history/", $query)

    if ($lib.debug) {
        $lib.print("Calling API URL: {url}", url=$api_url)
    }
    
    return($privsep.makeValidinAPIRequest($api_url))
}